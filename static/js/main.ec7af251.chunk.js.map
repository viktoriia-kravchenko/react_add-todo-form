{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","props","todos","map","startTodos","userId","usersFromServer","find","App","useState","setTitle","setUser","setTodos","titleError","setTitleError","userError","setUserError","getMaxId","todosIds","Math","max","getIdByUsername","userName","person","action","method","onSubmit","event","preventDefault","todoToAdd","prev","handleAdding","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec7af251.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { FC } from 'react';\n\nimport { User } from '../../types/User';\n\ninterface Props {\n  user: User\n}\n\nexport const UserInfo: FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { FC } from 'react';\n\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo:FC<Props> = ({ todo }) => {\n  const {\n    title,\n    completed = false,\n    user,\n    id,\n  } = todo;\n\n  return (\n    <article\n      key={id}\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import { FC } from 'react';\n\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: FC<Props> = (props) => {\n  const { todos } = props;\n\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","import React, { FC, useState } from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport { TodoList } from './components/TodoList';\n\nconst getUserById = (userId: number): User | null => {\n  return usersFromServer.find(user => user.id === userId) || null;\n};\n\nconst startTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App: FC = () => {\n  const [title, setTitle] = useState('');\n  const [user, setUser] = useState('');\n  const [todos, setTodos] = useState<Todo[]>(startTodos);\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const clearForm = () => {\n    setTitle('');\n    setUser('');\n  };\n\n  const getMaxId = (): number => {\n    const todosIds = todos.map(todo => todo.id);\n    const largestId = Math.max(...todosIds);\n\n    return largestId;\n  };\n\n  const getIdByUsername = (userName: string): number | null => {\n    return usersFromServer.find(person => person.name === userName)?.id || null;\n  };\n\n  const getUserByUsername = (userName: string): User | null => {\n    return usersFromServer.find(\n      person => person.name === userName,\n    ) || null;\n  };\n\n  const handleAdding = () => {\n    const todoToAdd = {\n      id: getMaxId() + 1,\n      userId: getIdByUsername(user),\n      title,\n      completed: false,\n      user: getUserByUsername(user),\n    };\n\n    setTodos((prev) => ([...prev, todoToAdd]));\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (title === '') {\n      setTitleError(true);\n    }\n\n    if (user === '') {\n      setUserError(true);\n    }\n\n    if (title && user) {\n      handleAdding();\n      clearForm();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:\n            <input\n              type=\"text\"\n              name=\"title\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={(event) => {\n                setTitle(event.target.value);\n                setTitleError(false);\n              }}\n            />\n          </label>\n\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n            <select\n              name=\"user\"\n              data-cy=\"userSelect\"\n              value={user}\n              onChange={(event) => {\n                setUser(event.target.value);\n                setUserError(false);\n              }}\n            >\n              <option value=\"\" disabled>\n                Choose a user\n              </option>\n\n              {usersFromServer.map(person => (\n                <option\n                  key={person.id}\n                  value={person.name}\n                >\n                  {person.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {userError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}