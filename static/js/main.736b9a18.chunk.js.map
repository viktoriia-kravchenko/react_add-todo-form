{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","Link","href","variant","underline","TodoInfo","todo","title","completed","Card","sx","marginBottom","CardContent","Typography","component","gutterBottom","className","cn","TodoList","todos","Box","width","map","startTodos","userId","usersFromServer","find","App","useState","setTitle","selectedUser","setSelectedUser","setTodos","isTitleError","setIsTitleError","isUserError","setIsUserError","getMaxId","todosIds","Math","max","getIdByUsername","userName","display","justifyContent","alignItems","minHeight","Paper","padding","margin","elevation","textAlign","action","method","onSubmit","event","preventDefault","todoToAdd","prev","handleAdding","mb","TextField","label","fullWidth","value","onChange","target","error","helperText","type","size","color","select","MenuItem","disabled","Button","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.736b9a18.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { FC } from 'react';\nimport { Link } from '@mui/material';\nimport { User } from '../../types/User';\n\ninterface Props {\n  user: User\n}\n\nexport const UserInfo: FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <Link href={`mailto:${email}`} variant=\"body2\" underline=\"hover\">\n      {name}\n    </Link>\n  );\n};\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { Card, CardContent, Typography } from '@mui/material';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo:FC<Props> = ({ todo }) => {\n  const {\n    title,\n    completed = false,\n    user,\n    id,\n  } = todo;\n\n  return (\n    <Card key={id} sx={{ marginBottom: '15px' }}>\n      <CardContent>\n        <Typography\n          variant=\"subtitle2\"\n          component=\"h2\"\n          gutterBottom\n          className={cn(\n            'TodoInfo',\n            {\n              'TodoInfo--completed': completed,\n            },\n          )}\n        >\n          {title}\n        </Typography>\n\n        {user && (\n          <UserInfo user={user} />\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n","import { FC } from 'react';\nimport { Box } from '@mui/material';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: FC<Props> = ({ todos }) => {\n  return (\n    <Box sx={{ width: '300px' }}>\n      {todos.map(todo => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </Box>\n  );\n};\n","import React, { FC, useState } from 'react';\nimport './App.scss';\n\nimport {\n  TextField, Box, MenuItem, Button, Typography, Paper,\n} from '@mui/material';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport { TodoList } from './components/TodoList';\n\nconst getUserById = (userId: number): User | null => (\n  usersFromServer.find(user => user.id === userId) || null\n);\n\nconst startTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App: FC = () => {\n  const [title, setTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState('');\n  const [todos, setTodos] = useState<Todo[]>(startTodos);\n  const [isTitleError, setIsTitleError] = useState(false);\n  const [isUserError, setIsUserError] = useState(false);\n\n  const clearForm = () => {\n    setTitle('');\n    setSelectedUser('');\n  };\n\n  const getMaxId = (): number => {\n    const todosIds = todos.map(todo => todo.id);\n    const largestId = Math.max(...todosIds);\n\n    return largestId;\n  };\n\n  const getIdByUsername = (userName: string): number | null => (\n    usersFromServer.find(user => user.name === userName)?.id || null\n  );\n\n  const getUserByUsername = (userName: string): User | null => {\n    return usersFromServer.find(\n      user => user.name === userName,\n    ) || null;\n  };\n\n  const handleAdding = () => {\n    const todoToAdd = {\n      id: getMaxId() + 1,\n      userId: getIdByUsername(selectedUser),\n      title,\n      completed: false,\n      user: getUserByUsername(selectedUser),\n    };\n\n    setTodos((prev) => ([...prev, todoToAdd]));\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (title === '') {\n      setIsTitleError(true);\n    }\n\n    if (selectedUser === '') {\n      setIsUserError(true);\n    }\n\n    if (title && selectedUser) {\n      handleAdding();\n      clearForm();\n    }\n  };\n\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      minHeight=\"100vh\"\n    >\n      <Paper\n        sx={{\n          width: '300px',\n          padding: '20px 32px',\n          margin: '32px 0',\n        }}\n        elevation={4}\n      >\n        <Typography\n          variant=\"h4\"\n          component=\"h1\"\n          textAlign=\"center\"\n          marginBottom={5}\n        >\n          Add todo form\n        </Typography>\n\n        <form\n          action=\"/api/users\"\n          method=\"POST\"\n          onSubmit={handleSubmit}\n        >\n          <Box\n            sx={{\n              mb: 2,\n            }}\n          >\n            <TextField\n              label=\"Title:\"\n              name=\"title\"\n              fullWidth\n              value={title}\n              onChange={(event) => {\n                setTitle(event.target.value);\n                setIsTitleError(false);\n              }}\n              error={isTitleError}\n              helperText={\n                isTitleError\n                  ? 'Please enter a title'\n                  : 'Enter a title'\n              }\n              type=\"text\"\n              size=\"small\"\n              color=\"secondary\"\n            />\n          </Box>\n\n          <Box\n            sx={{\n              mb: 2,\n            }}\n          >\n            <TextField\n              label=\"User:\"\n              name=\"user\"\n              select\n              value={selectedUser}\n              onChange={(event) => {\n                setSelectedUser(event.target.value);\n                setIsUserError(false);\n              }}\n              fullWidth\n              size=\"small\"\n              color=\"secondary\"\n              error={isUserError}\n              helperText={\n                isUserError\n                  ? 'Please choose a user'\n                  : 'Choose a user'\n              }\n            >\n              <MenuItem value=\"\" disabled>\n                Choose a user\n              </MenuItem>\n\n              {usersFromServer.map((user) => (\n                <MenuItem\n                  key={user.id}\n                  value={user.name}\n                >\n                  {user.name}\n                </MenuItem>\n              ))}\n            </TextField>\n          </Box>\n\n          <Box\n            sx={{\n              mb: 2,\n              display: 'flex',\n              justifyContent: 'center',\n            }}\n          >\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"secondary\"\n            >\n              Add\n            </Button>\n          </Box>\n        </form>\n\n        <TodoList todos={todos} />\n      </Paper>\n    </Box>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}